/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rw.gov.View;

import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import rw.gov.Model.Admins;
import rw.gov.Model.Transaction;
import rw.gov.Service.AdminInterface;
import rw.gov.Service.TransactionInterface;

/**
 *
 * @author andre
 */
public class UserList extends javax.swing.JInternalFrame {

    /**
     * Creates new form UserHome
     */
    DefaultTableModel model = new DefaultTableModel();

    
    
    public UserList() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
        initializeTableModel();
        addRows();
//        customerTable.setEnabled(false);
    
    }
        
    public void initializeTableModel() {
        model.addColumn("Username");
        model.addColumn("Password");
        model.addColumn("Role");
   
        
        userTable.setModel(model);
    }
    
     public void addRows() {
        try {
             Registry reg=LocateRegistry.getRegistry("127.0.0.1", 6000);
             AdminInterface adi=(AdminInterface) reg.lookup("admin");
             List<Admins> transaction= adi.allTransaction();
             DefaultTableModel recodedTable = (DefaultTableModel)userTable.getModel();
             recodedTable.setRowCount(0);
             Vector columnData = null;
             
             if(transaction != null)
            {
            for(Admins item: transaction)
            {                
                columnData = new Vector();
                columnData.add(item.getUsername());
                columnData.add(item.getPassword());                
                columnData.add(item.getRole()); 
 
                recodedTable.addRow(columnData);

            }
        }
         } catch (Exception e) {
             e.printStackTrace();
         }
     }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        role = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(620, 510));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(userTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 540, 250));

        jLabel2.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("List of User Admins");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 170, -1));

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, -1, -1));

        jLabel5.setText("Role:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, -1, -1));
        getContentPane().add(role, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 100, -1));
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 110, -1));

        jLabel6.setText("Password:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, -1, -1));

        jLabel3.setText("Username:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));
        getContentPane().add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 90, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rw/gov/View/bankbg.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -5, 690, 520));

        jLabel4.setText("Username:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
         try {
            Registry reg=LocateRegistry.getRegistry("127.0.0.1", 6000);
            AdminInterface intrf = (AdminInterface) reg.lookup("admin");
            Admins admin = new Admins();
            
            admin.setUsername(username.getText());
            admin.setPassword(password.getText());
            admin.setRole(role.getText());
            
            String feedback = intrf.registerAdmin(admin);
                     
            if(feedback.equalsIgnoreCase("Admin Registered Successifully")){
                JOptionPane.showMessageDialog(this, feedback, "FeedBack",JOptionPane.INFORMATION_MESSAGE);
                addRows();
              }
            else{
                JOptionPane.showMessageDialog(this, feedback,"Feedback",JOptionPane.ERROR_MESSAGE);
              }
           
        } catch (Exception e) {
        }
    }//GEN-LAST:event_addActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
          int selectedRowIndex = userTable.getSelectedRow();
    
    if (selectedRowIndex != -1) { // Check if a row is selected
        // Get the data from the selected row
        String username = (String) userTable.getValueAt(selectedRowIndex, 0);
        String password = (String) userTable.getValueAt(selectedRowIndex, 1);
        String role = (String) userTable.getValueAt(selectedRowIndex, 2);
        
        // Delete the selected row from the database
        try {
            Registry reg = LocateRegistry.getRegistry("127.0.0.1", 6000);
            AdminInterface intrf = (AdminInterface) reg.lookup("admin");
            
            Admins adminToDelete = new Admins();
            adminToDelete.setUsername(username);
            adminToDelete.setPassword(password);
            adminToDelete.setRole(role);
            
            String feedback = intrf.deleteAdmin(adminToDelete);
            
            if (feedback.equalsIgnoreCase("Admin delete Successifully")) {
                JOptionPane.showMessageDialog(this, feedback, "Feedback", JOptionPane.INFORMATION_MESSAGE);
                
                // Remove the selected row from the table model
                DefaultTableModel model = (DefaultTableModel) userTable.getModel();
                model.removeRow(selectedRowIndex);
            } else {
                JOptionPane.showMessageDialog(this, feedback, "Feedback", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row to delete.", "Error", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_deleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField role;
    private javax.swing.JTable userTable;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
